{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/contactform/contactform.component.css","webpack:///./src/app/contactform/contactform.component.html","webpack:///./src/app/contactform/contactform.component.ts","webpack:///./src/app/contactlist/contactlist.component.css","webpack:///./src/app/contactlist/contactlist.component.html","webpack:///./src/app/contactlist/contactlist.component.ts","webpack:///./src/app/services/contact.service.ts","webpack:///./src/app/shared/DBOperation.ts","webpack:///./src/app/shared/Global.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,4L;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,qBAAqB,CAAC;IAChC,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AAC6F;AACV;AACb;AAC9B;AA2CjF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAxC7B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,oEAAkB;gBAClB,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,gEAAc;gBACd,qEAAmB;gBACnB,qEAAmB;gBACnB,iEAAe;gBACf,iEAAe;gBACf,0EAAwB;gBACxB,mEAAiB;aACpB;YACD,OAAO,EAAE;gBACL,kEAAgB;gBAChB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,oEAAkB;gBAClB,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,gEAAc;gBACd,qEAAmB;gBACnB,qEAAmB;gBACnB,iEAAe;gBACf,iEAAe;gBACf,0EAAwB;gBACxB,mEAAiB;aACpB;SACJ,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/C4B;AACjB;AACyB;AACnB;AACP;AACuC;AACvB;AACL;AACO;AACiB;AACA;AACf;AAqB5D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,uFAAoB;gBACpB,wFAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,qEAAgB;gBAChB,sEAAiB;gBACjB,0DAAW;gBACX,kEAAmB;gBACnB,gEAAY;gBACZ,oDAAO;aACR;YACD,SAAS,EAAE,CAAC,yEAAc,CAAC;YAC3B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC/BtB;AAAA;AAAA;AAAA;AAAA;AAAuD;AAGoB;AACA;AAE3E,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAG,SAAS,EAAE,MAAM,EAAG,SAAS,EAAE,uFAAoB,EAAE;IAClE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAoB,EAAE;CACzD,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;ACZ5E,+DAA+D,2J;;;;;;;;;;;ACA/D,mGAAmG,iBAAiB,uPAAuP,wBAAwB,qRAAqR,uBAAuB,0RAA0R,oBAAoB,kUAAkU,0BAA0B,wLAAwL,sGAAsG,oBAAoB,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjjD;AAED;AAE+C;AAK3C;AACT;AACV;AAQ1C;IAOE,8BAA4C,IAAS,EAC3C,EAAe,EACf,eAA+B,EAChC,SAA6C;QAHV,SAAI,GAAJ,IAAI,CAAK;QAC3C,OAAE,GAAF,EAAE,CAAa;QACf,oBAAe,GAAf,eAAe,CAAgB;QAChC,cAAS,GAAT,SAAS,CAAoC;QARtD,eAAU,GAAG,KAAK,CAAC;QAkDnB,oBAAoB;QACpB,2CAA2C;QAC3C,eAAU,GAAG;YACX,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,EAAE;SAClB,CAAC;QACF,6BAA6B;QAC7B,2CAA2C;QAC3C,uBAAkB,GAAG;YACnB,WAAW,EAAE;gBACX,WAAW,EAAE,8CAA8C;gBAC3D,UAAU,EAAE,mBAAmB;aAChC;YACD,OAAO,EAAE;gBACP,OAAO,EAAE,uBAAuB;gBAChC,UAAU,EAAE,oBAAoB;aACjC;YACD,aAAa,EAAE;gBACb,WAAW,EAAE,iDAAiD;gBAC9D,WAAW,EAAE,iDAAiD;gBAC9D,UAAU,EAAE,0BAA0B;gBACtC,SAAS,EAAG,2BAA2B;aACxC;SAEF,CAAC;IApEwD,CAAC;IAE3D,uCAAQ,GAAR;QAAA,iBAoBC;QAnBC,qBAAqB;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SAC7H,CAAC,CAAC;QAEH,sEAAsE;QACtE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,+DAAW,CAAC,MAAM,EAAE;YAC1C,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,+DAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC/E,CAAC;IACD,0BAA0B;IAC1B,6CAAc,GAAd,UAAe,IAAU;QACvB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;SAAE;QACjC,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7B,iCAAiC;QACjC,KAAK,IAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACnC,wCAAwC;YACxC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,0CAA0C;YAC1C,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,iCAAiC;gBACjC,KAAK,IAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;iBAC/C;aACF;SACF;IACH,CAAC;IA4BD,uCAAQ,GAAR,UAAS,QAAa;QAAtB,iBAiDC;QAhDC,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrD,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACvB,KAAK,+DAAW,CAAC,MAAM;gBACrB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,qDAAM,CAAC,kBAAkB,GAAG,YAAY,EAAE,WAAW,CAAC,CAAC,SAAS,CAC9F,cAAI;oBACF,UAAU;oBACV,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;qBACjC;yBAAM;wBACL,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC/B;gBACH,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAChC,CAAC,CACF,CAAC;gBACF,MAAM;YACR,KAAK,+DAAW,CAAC,MAAM;gBACrB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,qDAAM,CAAC,kBAAkB,GAAG,eAAe,EAAE,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,SAAS,CACpH,cAAI;oBACF,UAAU;oBACV,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;qBACjC;yBAAM;wBACL,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC/B;gBACH,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAChC,CAAC,CACF,CAAC;gBACF,MAAM;YACR,KAAK,+DAAW,CAAC,MAAM;gBACrB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,qDAAM,CAAC,kBAAkB,GAAG,eAAe,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CACvG,cAAI;oBACF,UAAU;oBACV,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;qBACjC;yBAAM;wBACL,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC/B;gBACH,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAChC,CAAC,CACF,CAAC;gBACF,MAAM;SACT;IACH,CAAC;IACD,+CAAgB,GAAhB,UAAiB,QAAiB;QAChC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IAClE,CAAC;IAED,0CAAW,GAAX,UAAY,OAAiB;QAC3B,OAAO,OAAO,CAAC;IACjB,CAAC;IAvIU,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;QASa,uEAAM,CAAC,iEAAe,CAAC;iDACtB,0DAAW;YACE,wEAAc;YACrB,8DAAY;OAVrB,oBAAoB,CAwIhC;IAAD,2BAAC;CAAA;AAxIgC;;;;;;;;;;;;ACnBjC,kCAAkC,uBAAuB,GAAG,gBAAgB,aAAa,cAAc,oBAAoB,GAAG,wCAAwC,kBAAkB,2BAA2B,qBAAqB,sBAAsB,sBAAsB,mBAAmB,mBAAmB,GAAG,+CAA+C,u0B;;;;;;;;;;;ACA5W,8DAA8D,8IAA8I,gbAAgb,YAAY,yOAAyO,mBAAmB,gOAAgO,kBAAkB,2NAA2N,eAAe,6OAA6O,qBAAqB,ukBAAukB,2BAA2B,qD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvoE;AACO;AACS;AAED;AAEf;AAET;AACV;AAO1C;IAaE,8BAAmB,QAAqB,EAAU,eAA+B,EAAU,MAAiB;QAAzF,aAAQ,GAAR,QAAQ,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAW;QAL5G,sDAAsD;QACtD,qBAAgB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC/E,2CAA2C;QAC3C,eAAU,GAAG,IAAI,oEAAkB,EAAY,CAAC;IAEgE,CAAC;IAEjH,uCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,yCAAU,GAAV;QAAA,iBA4BC;QA3BC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAoB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;SACnH,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,QAAQ,KAAI,CAAC,KAAK,EAAE;oBAClB,KAAK,+DAAW,CAAC,MAAM;wBACrB,KAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC,CAAC;wBACnD,MAAM;oBACR,KAAK,+DAAW,CAAC,MAAM;wBACrB,KAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC;wBACrD,MAAM;oBACR,KAAK,+DAAW,CAAC,MAAM;wBACrB,KAAI,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC;wBACrD,MAAM;iBACT;aACF;iBAAM,IAAI,MAAM,KAAK,OAAO,EAAE;gBAC7B,KAAI,CAAC,WAAW,CAAC,gFAAgF,CAAC,CAAC;aACpG;iBAAM;gBACN,8DAA8D;aAC9D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,qDAAM,CAAC,kBAAkB,GAAG,eAAe,CAAC;aAC5E,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAU,GAAV;QACE,IAAI,CAAC,KAAK,GAAG,+DAAW,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,0CAAW,GAAX,UAAY,EAAU;QACpB,IAAI,CAAC,KAAK,GAAG,+DAAW,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,4CAAa,GAAb,UAAc,EAAU;QACtB,IAAI,CAAC,KAAK,GAAG,+DAAW,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,0CAAW,GAAX,UAAY,GAAW;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE;YAC1B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAjFU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;yCAc6B,6DAAW,EAA2B,wEAAc,EAAkB,2DAAS;OAbjG,oBAAoB,CAkFhC;IAAD,2BAAC;CAAA;AAlFgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBU;AACsC;AAC9B;AAGL;AACF;AAI5C,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AAGF;IACE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,uBAAuB;IACvB,sCAAa,GAAb,UAAc,GAAW;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,CAAC;aAClC,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,6BAA6B;IAC7B,mCAAU,GAAV,UAAW,GAAW,EAAE,OAAiB;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC;aAC7D,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,yBAAyB;IACzB,sCAAa,GAAb,UAAc,GAAW,EAAE,EAAU,EAAE,OAAiB;QACtD,IAAM,MAAM,GAAM,GAAG,YAAO,EAAI,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;aAC/C,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,6BAA6B;IAC7B,sCAAa,GAAb,UAAc,GAAW,EAAE,EAAU;QACnC,IAAM,MAAM,GAAM,GAAG,YAAO,EAAI,CAAC,CAAC,2BAA2B;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC;aACzC,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,iBAAiB;IACT,oCAAW,GAAnB,UAAoB,KAAwB;QAC1C,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACX,2BAAyB,KAAK,CAAC,MAAM,OAAI;iBACzC,eAAa,KAAK,CAAC,KAAO,EAAC,CAAC;SAC/B;QACD,wDAAwD;QACxD,OAAO,uDAAU,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;IAnDU,cAAc;QAD1B,gEAAU,EAAE;yCAEe,+DAAU;OADzB,cAAc,CAoD1B;IAAD,qBAAC;CAAA;AApD0B;;;;;;;;;;;;;ACjB3B;AAAA;AAAA,IAAY,WAIX;AAJD,WAAY,WAAW;IACnB,iDAAU;IACV,iDAAU;IACV,iDAAU;AACd,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;;;;;;;;;;;;;ACJD;AAAA;AAAA;IAAA;IAUA,CAAC;IATiB,yBAAkB,GAAG,cAAc,CAAC;IACpC,cAAO,GAAG,CAAC;YACrB,IAAI,EAAE,MAAM;YACZ,EAAE,EAAE,CAAC;SACR,EAAE;YACC,IAAI,EAAE,QAAQ;YACd,EAAE,EAAE,CAAC;SACR,CAAC,CAAC;IACW,mBAAY,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;IACpE,aAAC;CAAA;AAVkB;;;;;;;;;;;;;ACAnB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar>\\n  <span>Contact Application</span>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Contact Application';\n}\n","import { NgModule } from '@angular/core';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatTableModule } from '@angular/material';\nimport { MatPaginatorModule, MatFormFieldModule, MatRadioModule, MatSelectModule, MatInputModule } from '@angular/material';\nimport { MatDatepickerModule, MatNativeDateModule, MatOptionModule, MatDialogModule } from '@angular/material';\nimport {  MatProgressSpinnerModule, MatSnackBarModule } from '@angular/material';\n\n\n@NgModule({\n    imports: [\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatOptionModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatSnackBarModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatOptionModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatSnackBarModule\n    ],\n})\nexport class AppMaterialModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { Routing } from './app.routing';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { AppMaterialModule } from './app.material.module';\nimport { ContactformComponent } from './contactform/contactform.component';\nimport { ContactlistComponent } from './contactlist/contactlist.component';\nimport { ContactService } from './services/contact.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactformComponent,\n    ContactlistComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,    \n    HttpClientModule,\n    AppMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LayoutModule,\n    Routing\n  ],\n  providers: [ContactService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ContactlistComponent } from './contactlist/contactlist.component';\nimport { ContactformComponent } from './contactform/contactform.component';\n\nconst appRoutes: Routes = [\n  { path: '',  pathMatch: 'full' , component: ContactlistComponent },\n  { path: 'contactform', component: ContactformComponent }\n];\n\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3Rmb3JtL2NvbnRhY3Rmb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form  (ngSubmit)=\\\"onSubmit(contactFrm)\\\"  [formGroup]=\\\"contactFrm\\\">\\n  <h2>{{data.modalTitle}}</h2>\\n  \\n  <div>\\n      <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>FirstName</mat-label>\\n      <input matInput placeholder=\\\"firstname\\\" formControlName=\\\"firstname\\\">\\n      <mat-error *ngIf=\\\"formErrors.firstname\\\">\\n        {{ formErrors.firstname }}\\n      </mat-error>\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>LastName</mat-label>\\n    <input matInput placeholder=\\\"lastname\\\" formControlName=\\\"lastname\\\">\\n    <mat-error *ngIf=\\\"formErrors.lastname\\\">\\n      {{ formErrors.lastname }}\\n    </mat-error>\\n  </mat-form-field>\\n</div>\\n  <div>\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Email</mat-label>\\n      <input type=\\\"email\\\" matInput placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\n      <mat-error *ngIf=\\\"formErrors.email\\\">\\n        {{ formErrors.email }}\\n      </mat-error>\\n    </mat-form-field>\\n  \\n  </div>\\n  <div>\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>PhoneNumber</mat-label>\\n      <input type=\\\"phonenumber\\\" matInput placeholder=\\\"phonenumber\\\" formControlName=\\\"phonenumber\\\">\\n      <mat-error *ngIf=\\\"formErrors.phonenumber\\\">\\n        {{ formErrors.phonenumber }}\\n      </mat-error>\\n    </mat-form-field>\\n  \\n  </div>\\n  <div>\\n  \\n    <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>&nbsp;\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"contactFrm.invalid\\\">{{data.modalBtnTitle}}</button>\\n  </div>\\n  \\n  </form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, AUTOCOMPLETE_PANEL_HEIGHT } from '@angular/material';\n\nimport { ContactlistComponent } from '../contactlist/contactlist.component';\n\nimport { IContact } from '../model/contact';\nimport { ContactService } from '../services/contact.service';\nimport { DBOperation } from '../shared/DBOperation';\nimport { Global } from '../shared/Global';\n\n@Component({\n  selector: 'app-contactform',\n  templateUrl: './contactform.component.html',\n  styleUrls: ['./contactform.component.css']\n})\n\nexport class ContactformComponent implements OnInit {\n  msg: string;\n  indLoading = false;\n  contactFrm: FormGroup;\n  listFilter: string;\n  selectedOption: string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private _contactService: ContactService,\n    public dialogRef: MatDialogRef<ContactlistComponent>) { }\n\n  ngOnInit() {\n    // built contact form\n    this.contactFrm = this.fb.group({\n      id: [''],\n      firstname: ['', [Validators.required, Validators.maxLength(50)]],\n      lastname: ['', [Validators.maxLength(50)]],\n      email: ['', [Validators.required, Validators.email]],\n      phonenumber: ['', [Validators.required, Validators.maxLength(12), Validators.minLength(10), Validators.pattern(\"^[0-9]*$\")]]\n    });\n\n    // subscribe on value changed event of form to show validation message\n    this.contactFrm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n\n    if (this.data.dbops === DBOperation.create) {\n      this.contactFrm.reset();\n    } else {\n      this.contactFrm.setValue(this.data.contact);\n    }\n    this.SetControlsState(this.data.dbops === DBOperation.delete ? false : true);\n  }\n  // form value change event\n  onValueChanged(data?: any) {\n    if (!this.contactFrm) { return; }\n    const form = this.contactFrm;\n    // tslint:disable-next-line:forin\n    for (const field in this.formErrors) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n      // setup custom validation message to form\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        // tslint:disable-next-line:forin\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n  // form errors model\n  // tslint:disable-next-line:member-ordering\n  formErrors = {\n    'firstname': '',\n    'lastname': '',\n    'email': '',\n    'phonenumber': ''\n  };\n  // custom valdiation messages\n  // tslint:disable-next-line:member-ordering\n  validationMessages = {\n    'firstname': {\n      'maxlength': 'Name cannot be more than 50 characters long.',\n      'required': 'Name is required.'\n    },\n    'email': {\n      'email': 'Invalid email format.',\n      'required': 'Email is required.'\n    },\n    'phonenumber': {\n      'maxlength': 'PhoneNumber cannot be more than 12 digits long.',\n      'minlength': 'PhoneNumber cannot be less than 10 digits long.',\n      'required': 'PhoneNumber is required.',\n      'pattern' : 'Please enter digits only.'\n    }\n\n  };\n  onSubmit(formData: any) {\n    const contactData = this.mapDateData(formData.value);\n    switch (this.data.dbops) {\n      case DBOperation.create:\n        this._contactService.addContact(Global.BASE_USER_ENDPOINT + 'addContact', contactData).subscribe(\n          data => {\n            // Success\n            if (data.message) {\n              this.dialogRef.close('success');\n            } else {\n              this.dialogRef.close('error');\n            }\n          },\n          error => {\n            this.dialogRef.close('error');\n          }\n        );\n        break;\n      case DBOperation.update:\n        this._contactService.updateContact(Global.BASE_USER_ENDPOINT + 'updateContact', contactData.id, contactData).subscribe(\n          data => {\n            // Success\n            if (data.message) {\n              this.dialogRef.close('success');\n            } else {\n              this.dialogRef.close('error');\n            }\n          },\n          error => {\n            this.dialogRef.close('error');\n          }\n        );\n        break;\n      case DBOperation.delete:\n        this._contactService.deleteContact(Global.BASE_USER_ENDPOINT + 'deleteContact', contactData.id).subscribe(\n          data => {\n            // Success\n            if (data.message) {\n              this.dialogRef.close('success');\n            } else {\n              this.dialogRef.close('error');\n            }\n          },\n          error => {\n            this.dialogRef.close('error');\n          }\n        );\n        break;\n    }\n  }\n  SetControlsState(isEnable: boolean) {\n    isEnable ? this.contactFrm.enable() : this.contactFrm.disable();\n  }\n\n  mapDateData(contact: IContact): IContact {\n    return contact;\n  }\n}\n","module.exports = \"/* .contactlist{\\n  text-align: center;\\n} */\\n\\n.spinner{\\n  top: 45%;\\n  left: 47%;\\n  position: fixed;\\n}\\n\\n.contactlist-container, #paginator {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n  max-width: 1200px;\\n  max-height: 700px;\\n  overflow: auto;\\n  margin: 0 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdGxpc3QvY29udGFjdGxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRzs7QUFFSDtFQUNFLFFBQVE7RUFDUixTQUFTO0VBQ1QsZUFBZTtBQUNqQjs7QUFDQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb250YWN0bGlzdC9jb250YWN0bGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmNvbnRhY3RsaXN0e1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59ICovXG5cbi5zcGlubmVye1xuICB0b3A6IDQ1JTtcbiAgbGVmdDogNDclO1xuICBwb3NpdGlvbjogZml4ZWQ7XG59XG4uY29udGFjdGxpc3QtY29udGFpbmVyLCAjcGFnaW5hdG9yIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIG1heC1oZWlnaHQ6IDcwMHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"spinner\\\" *ngIf=\\\"loadingState; else contactlist\\\">\\n<mat-spinner></mat-spinner>\\n</div>\\n<ng-template class=\\\"contactlist\\\" #contactlist>\\n  <h2 style=\\\"text-align: center;\\\">Contact List</h2>\\n  <div class=\\\"contactlist-container mat-elevation-z8\\\">\\n    <div><button title=\\\"Create\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"addContact()\\\">Add</button></div>\\n    <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n      <!-- Id Column -->\\n      <!-- <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> Id </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n    </ng-container> -->\\n\\n      <!-- FirstName Column -->\\n      <ng-container matColumnDef=\\\"firstname\\\">\\n        <th mat-header-cell *matHeaderCellDef> FirstName </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstname}} </td>\\n      </ng-container>\\n\\n      <!-- LastName Column -->\\n      <ng-container matColumnDef=\\\"lastname\\\">\\n      <th mat-header-cell *matHeaderCellDef> LastName </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastname}} </td>\\n      </ng-container>\\n\\n      <!-- Email Column -->\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef> Email </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n      </ng-container>\\n\\n      <!-- PhoneNumber Column -->\\n      <ng-container matColumnDef=\\\"phonenumber\\\">\\n        <th mat-header-cell *matHeaderCellDef> PhoneNumber </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phonenumber}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button title=\\\"Edit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"editContact(element.id)\\\">Edit</button>\\n          <button title=\\\"Delete\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteContact(element.id)\\\">Delete</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n  </div>\\n</ng-template>\\n\"","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { MatTableDataSource, MatSnackBar } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ContactformComponent } from '../contactform/contactform.component';\n\nimport { ContactService } from '../services/contact.service';\nimport { IContact } from '../model/contact';\nimport { DBOperation } from '../shared/DBOperation';\nimport { Global } from '../shared/Global';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n  contacts: IContact[];\n  contact: IContact;\n  loadingState: boolean;\n  dbops: DBOperation;\n  modalTitle: string;\n  modalBtnTitle: string;\n\n  // set columns that will need to show in listing table\n  displayedColumns = ['firstname', 'lastname', 'email', 'phonenumber', 'action'];\n  // setting up datasource for material table\n  dataSource = new MatTableDataSource<IContact>();\n\n  constructor(public snackBar: MatSnackBar, private _contactService: ContactService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loadingState = true;\n    this.loadContacts();\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ContactformComponent, {\n      width: '500px',\n      data: { dbops: this.dbops, modalTitle: this.modalTitle, modalBtnTitle: this.modalBtnTitle, contact: this.contact }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result === 'success') {\n        this.loadingState = true;\n        this.loadContacts();\n        switch (this.dbops) {\n          case DBOperation.create:\n            this.showMessage('Contact is added successfully.');\n            break;\n          case DBOperation.update:\n            this.showMessage('Contact is updated successfully.');\n            break;\n          case DBOperation.delete:\n            this.showMessage('Contact is deleted successfully.');\n            break;\n        }\n      } else if (result === 'error') {\n        this.showMessage('There is some issue in saving records, please contact to system administrator!');\n      } else {\n       // this.showMessage('Please try again, something went wrong');\n      }\n    });\n  }\n\n  loadContacts(): void {\n    this._contactService.getAllContact(Global.BASE_USER_ENDPOINT + 'getAllContact')\n      .subscribe(contacts => {\n        this.loadingState = false;\n        this.dataSource.data = contacts;\n      });\n  }\n\n  addContact() {\n    this.dbops = DBOperation.create;\n    this.modalTitle = 'Add New Contact';\n    this.modalBtnTitle = 'Add';\n    this.openDialog();\n  }\n  editContact(id: number) {\n    this.dbops = DBOperation.update;\n    this.modalTitle = 'Edit Contact';\n    this.modalBtnTitle = 'Update';\n    this.contact = this.dataSource.data.filter(x => x.id === id)[0];\n    this.openDialog();\n  }\n  deleteContact(id: number) {\n    this.dbops = DBOperation.delete;\n    this.modalTitle = 'Confirm to Delete ?';\n    this.modalBtnTitle = 'Delete';\n    this.contact = this.dataSource.data.filter(x => x.id === id)[0];\n    this.openDialog();\n  }\n  showMessage(msg: string) {\n    this.snackBar.open(msg, '', {\n      duration: 3000\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { IContact } from '../model/contact';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable()\nexport class ContactService {\n  constructor(private http: HttpClient) { }\n\n  // get all contact data\n  getAllContact(url: string): Observable<IContact[]> {\n    return this.http.get<IContact[]>(url)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // insert new contact details\n  addContact(url: string, contact: IContact): Observable<any> {\n    return this.http.post(url, JSON.stringify(contact), httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // update contact details\n  updateContact(url: string, id: number, contact: IContact): Observable<any> {\n    const newurl = `${url}?id=${id}`;\n    return this.http.put(newurl, contact, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // delete contact information\n  deleteContact(url: string, id: number): Observable<any> {\n    const newurl = `${url}?id=${id}`; // DELETE api/contact?id=42\n    return this.http.delete(newurl, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  // custom handler\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","export enum DBOperation {\n    create = 1,\n    update = 2,\n    delete = 3\n}\n","export class Global {\n    public static BASE_USER_ENDPOINT = 'api/contact/';\n    public static genders = [{\n        name: 'Male',\n        id: 0,\n    }, {\n        name: 'Female',\n        id: 1\n    }];\n    public static technologies = ['JavaScript', 'SharePoint', 'C#'];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}